@model CryptoInvestment.ViewModels.Deposit.DepositViewModel

@{
    Layout = "~/Views/Shared/_Dashboard.cshtml";
    ViewBag.Title = "GHR I & T";
}

<div>
    <div class="row wrapper border-bottom white-bg page-heading">
        <h1>Depósitos</h1>
    </div>

    <div class="wrapper animated fadeInRight" style="padding: 80px 10px 40px;">
        <div class="row">
            <div class="col-lg-12">
                <div class="ibox">
                    <div class="ibox-content">
                        <form id="securityQuestionsForm" asp-action="CreatePlan" asp-controller="Crypto" method="post" class="wizard-big">
                            <input type="hidden" asp-for="CustomerId" />

                            <h1>Primer Paso</h1>
                            <fieldset>
                                <h2 class="m-b-md">Descripción del Plan</h2>
                                <div class="form-group">
                                    <select asp-for="InvPlanId" id="InvPlanId" class="form-control" style="border-radius: 10px; height: 40px; width: auto" required>
                                        <option value="">Seleccione un plan de inversión</option>
                                        @foreach (var plan in Model.InvPlans)
                                        {
                                            var profit = plan.MinAmount * plan.ProfitPercentage / 100;
                                            <option value="@plan.IdInvPlans" 
                                                    data-max="@plan.MaxAmount" 
                                                    data-min="@plan.MinAmount" 
                                                    data-percent="@plan.ProfitPercentage" 
                                                    data-profit="@profit">
                                                @plan.PlanName
                                            </option>
                                        }
                                    </select>
                                    <span class="text-danger" asp-validation-for="InvPlanId"></span>
                                    <div class="m-r-xl">
                                        <h4 class="m-t m-r-lg">
                                            Monto Mínimo: <span id="minAmountDisplay"></span> |
                                            Monto Máximo: <span id="maxAmountDisplay"></span>
                                        </h4>
                                        <h4 class="m-t m-r-lg">
                                            Porcentage de Ganancia: <span id="percentProfit"></span> |
                                            Beneficio Mínimo: <span id="minProfit"></span>
                                        </h4>
                                    </div>
                                </div>

                                <div class="form-group m-t-xl">
                                    <h3>Seleccione una moneda:</h3>
                                    <div class="currency-options">
                                        @foreach (var currency in Model.InvCurrencies)
                                        {
                                            <div class="form-check form-check-inline">
                                                <input type="radio" id="currency_@currency.CurrencyId" 
                                                       name="SelectedCurrencyId" 
                                                       value="@currency.CurrencyId" 
                                                       data-icon="@Url.Content("~/images/" + currency.CurrencyId + ".svg")"
                                                       data-description="@currency.Description"
                                                       data-wallet="@currency.WalletAddress"
                                                       class="form-check-input" required>
                                                <label for="currency_@currency.CurrencyId" class="form-check-label">
                                                    <img src="@Url.Content("~/images/" + currency.CurrencyId + ".svg")"
                                                         alt="@currency.Description"
                                                         width="24" height="24" style="margin-right: 8px;">
                                                    @currency.Description
                                                </label>
                                            </div>
                                        }
                                        <input type="hidden" asp-for="SelectedCurrencyId" id="hiddenCurrency" />
                                    </div>
                                </div>
                            </fieldset>

                            <h1>Segundo Paso</h1>
                            <fieldset>
                                <div id="selectedCurrencyDisplay"></div>

                                <label>Monto a depositar</label>
                                <div class="form-group" style="width: auto">
                                    <input asp-for="DepositAmount" type="number" class="form-control" placeholder="Monto a depositar" required style="width: auto"/>
                                    <span class="text-danger">@Html.ValidationMessageFor(model => model.DepositAmount)</span>
                                </div>

                                <div id="reinversionSection" style="display: none;">
                                    <label id="reinversionLabel"></label>
                                    <div class="form-group" style="width: auto">
                                        <input asp-for="ReinversionAmount" type="number" class="form-control" placeholder="Monto a reinvertir" required style="width: auto"/>
                                        <span class="text-danger">@Html.ValidationMessageFor(model => model.ReinversionAmount)</span>
                                    </div>
                                </div>
                            </fieldset>

                            <h1>Tercer Paso</h1>
                            <fieldset id="step3">
                                <div class="i-checks">
                                    <label>
                                        <div>
                                            <label>
                                                <div class="iradio_square-green" style="position: relative;">
                                                    <input type="radio" name="ReinvestOption" value="100" data-endtype="1" checked="checked" style="position: absolute; opacity: 0;">
                                                    <ins class="iCheck-helper" style="position: absolute; top: 0; left: 0; display: block; width: 100%; height: 100%; margin: 0; padding: 0; background: #fff; border: 0; opacity: 0;"></ins>
                                                </div>
                                                <i></i> Reinversión automática Capital y Beneficios
                                            </label>
                                        </div>
                                    </label>
                                </div>
                                <div class="i-checks">
                                    <label>
                                        <div>
                                            <label>
                                                <div class="iradio_square-green" style="position: relative;">
                                                    <input type="radio" name="ReinvestOption" value="custom" data-endtype="2" style="position: absolute; opacity: 0;">
                                                    <ins class="iCheck-helper" style="position: absolute; top: 0; left: 0; display: block; width: 100%; height: 100%; margin: 0; padding: 0; background: #fff; border: 0; opacity: 0;"></ins>
                                                </div>
                                                <i></i> Reinversión automática del Capital y Reinvertir X% de los beneficios
                                            </label>
                                        </div>
                                    </label>
                                </div>
                                <div id="customReinvestInput" class="form-group" style="display: none; margin-top: 10px; margin-bottom: 10px; width: auto">
                                    <label>Ingrese % de ganancias a reinvertir</label>
                                    <input type="number" id="customReinvestPercent" class="form-control" min="0" max="100" style="width: auto"/>
                                    <span class="text-danger">@Html.ValidationMessageFor(model => model.ReinvestPercent)</span>
                                </div>
                                <div class="i-checks">
                                    <label>
                                        <div>
                                            <label>
                                                <div class="iradio_square-green" style="position: relative;">
                                                    <input type="radio" name="ReinvestOption" value="0" data-endtype="3" style="position: absolute; opacity: 0;">
                                                    <ins class="iCheck-helper" style="position: absolute; top: 0; left: 0; display: block; width: 100%; height: 100%; margin: 0; padding: 0; background: #fff; border: 0; opacity: 0;"></ins>
                                                </div>
                                                <i></i> No Reinvertir (Capital y Beneficios pasan al Saldo Disponible para retiros)
                                            </label>
                                        </div>
                                    </label>
                                </div>
                                <!-- Campo oculto para el binding de ReinvestPercent -->
                                <input type="hidden" asp-for="ReinvestPercent" id="hiddenReinvestPercent" />
                                <!-- Campo oculto para el binding de EndType -->
                                <input type="hidden" asp-for="EndType" id="hiddenEndType" />
                            </fieldset>

                            <h1>Cuarto Paso</h1>
                            <fieldset id="step4">
                                <input type="hidden" asp-for="MonthProfit" id="MonthProfit" />
                                <div id="step4Message1"></div>
                                <br />
                                <div id="selectedCurrencyDisplay2"></div>

                                <div class="d-inline-flex center-container align-items-center m-b">
                                    <h4 id="copytext" class="m-r">wallet</h4>
                                    <button type="button" class="btn btn-clip btn-primary" data-clipboard-target="#copytext"><i class="fa fa-copy"></i> Copiar</button>
                                </div>
                                
                                <div id="step4Message2"></div>
                                <div id="step4Message3"></div>
                            </fieldset>
                        </form>
                        @if (!ViewData.ModelState.IsValid)
                        {
                            <div class="alert alert-danger">
                                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <environment names="Development,Staging,Production">
        <link rel="stylesheet" href="~/lib/iCheck/custom.css" />
        <link rel="stylesheet" href="~/lib/steps/jquery.steps.css" />
    </environment>
}

@section Scripts {
    <environment names="Development,Staging,Production">
        <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
        <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
        <script src="~/lib/steps/jquery.steps.min.js"></script>
        <script src="~/lib/clipboard/clipboard.min.js"></script>
        <script src="~/lib/iCheck/icheck.min.js"></script>
    </environment>
    <script type="text/javascript">
        $(document).ready(function () {
            new Clipboard('.btn-clip');

            // Inicializar el wizard
            $("#securityQuestionsForm").steps({
                headerTag: "h1",
                bodyTag: "fieldset",
                transitionEffect: "fade",
                autoFocus: true,
                labels: {
                    cancel: "Cancelar",
                    current: "Actual",
                    finish: "Finalizar",
                    next: "Siguiente",
                    previous: "Anterior",
                    loading: "Cargando..."
                },
                onStepChanging: function (event, currentIndex, newIndex) {
                    if (currentIndex > newIndex) {
                        return true;
                    }
                    var form = $(this);
                    form.validate().settings.ignore = ":disabled,:hidden";

                    if (currentIndex === 1 && newIndex === 2) {
                        var deposit = parseFloat($("input[name='DepositAmount']").val()) || 0;
                        var reinversion = parseFloat($("input[name='ReinversionAmount']").val()) || 0;
                        var totalInvest = deposit + reinversion;
                        var selectedOption = $('#InvPlanId').find('option:selected');
                        var minAmount = parseFloat(selectedOption.data('min')) || 0;
                        var maxAmount = parseFloat(selectedOption.data('max')) || 0;

                        var invBalances = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.InvBalances));
                        
                        // Obtener el balance disponible de la moneda seleccionada
                        var selectedCurrencyId = $('input[name="SelectedCurrencyId"]:checked').val();
                        var balanceObj = invBalances.find(function(b) {
                            return b.IdCurrency == selectedCurrencyId;
                        });
                        var availableBalance = balanceObj ? parseFloat(balanceObj.Balance) || 0 : 0;

                        // Validar que el monto total de inversión está dentro del rango permitido
                        if (totalInvest < minAmount || totalInvest > maxAmount) {
                            alert("El monto total a invertir (" + totalInvest + ") no está dentro del rango permitido del plan seleccionado. " +
                                "Debe elegir otro plan que permita esta cantidad.");
                            return false;
                        }

                        // Validar que la reinversión no supere el balance disponible
                        if (reinversion > availableBalance) {
                            alert("El monto de reinversión (" + reinversion + ") no puede ser mayor que tu balance disponible (" + availableBalance + ").");
                            return false;
                        }
                    }

                    return form.valid();
                },
                onStepChanged: function(event, currentIndex, priorIndex) {
                    // Si estamos en el cuarto paso (índice 3)
                    if (currentIndex === 3) {
                        updateStep4Info();
                    }
                },
                onFinishing: function (event, currentIndex) {
                    var form = $(this);
                    form.validate().settings.ignore = ":disabled";
                    return form.valid();
                },
                onFinished: function (event, currentIndex) {
                    $(this).submit();
                }
            }).validate({
                errorPlacement: function (error, element) {
                    error.insertBefore(element);
                }
            });

            function updateAmounts() {
                var selectedOption = $('#InvPlanId').find('option:selected');
                var maxAmount = selectedOption.data('max');
                var minAmount = selectedOption.data('min');
                var percentProfit = selectedOption.data('percent');
                var minProfit = selectedOption.data('profit');

                $('#minAmountDisplay').text(minAmount ? new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(minAmount) : '');
                $('#maxAmountDisplay').text(maxAmount ? new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(maxAmount) : '');
                $('#percentProfit').text(percentProfit ? new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(percentProfit) : '');
                $('#minProfit').text(minProfit ? new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(minProfit) : '');
            }
            updateAmounts();
            $('#InvPlanId').change(updateAmounts);

            $('.currency-options input[type="radio"]').first().prop('checked', true);

            // Actualizar el campo oculto de moneda y la visualización en el segundo paso
            $('input[name="SelectedCurrencyId"]').on('change', function(){
                var selected = $(this).val();
                $('#hiddenCurrency').val(selected);
                updateSelectedCurrencyDisplay();
                updateReinversionSection();
            });

            function updateSelectedCurrencyDisplay() {
                var selectedRadio = $('input[name="SelectedCurrencyId"]:checked');
                if (selectedRadio.length > 0) {
                    var icon = selectedRadio.data('icon');
                    var description = selectedRadio.data('description');
                    var wallet = selectedRadio.data('wallet');

                    var html = '<label for="' + selectedRadio.attr('id') + '" class="form-check-label">' +
                        '<img src="' + icon + '" alt="' + description + '" width="24" height="24" style="margin-right: 8px;">' +
                        description +
                        '</label>';
                    $('#selectedCurrencyDisplay').html(html);
                    $('#selectedCurrencyDisplay2').html(html);
                    $('#copytext').text(wallet);
                } else {
                    $('#selectedCurrencyDisplay').html('');
                    $('#selectedCurrencyDisplay2').html('');
                    $('#copytext').text('');
                }
            }

            updateSelectedCurrencyDisplay();

            // Serializar la lista de balances del modelo
            var invBalances = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.InvBalances));

            // Función para actualizar la sección de reinversión según el balance disponible para la moneda seleccionada
            function updateReinversionSection() {
                var selectedCurrencyId = parseInt($('input[name="SelectedCurrencyId"]:checked').val());
                if (!selectedCurrencyId) {
                    $("#reinversionSection").hide();
                    return;
                }
                // Buscar el balance correspondiente en la lista
                var balanceObj = invBalances.find(function(b) {
                    return b.IdCurrency === selectedCurrencyId;
                });
                if (balanceObj && balanceObj.Balance > 0) {
                    var formatter = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' });
                    var formattedBalance = formatter.format(balanceObj.Balance);
                    var description = $('input[name="SelectedCurrencyId"]:checked').data('description');
                    var message = "Tienes dividendos disponibles por: " + formattedBalance + " " + description +
                        ", podrá reinvertir la cantidad que usted desee.";
                    $("#reinversionLabel").text(message);
                    $("#reinversionSection").show();
                } else {
                    $("#reinversionSection").hide();
                }
            }

            updateReinversionSection();

            // Función para actualizar el contenido del paso 4
            function updateStep4Info() {
                var deposit = parseFloat($("input[name='DepositAmount']").val()) || 0;
                var reinversion = parseFloat($("input[name='ReinversionAmount']").val()) || 0;
                var totalInvest = deposit + reinversion;
                var selectedOption = $('#InvPlanId').find('option:selected');
                var profitPercentage = parseFloat(selectedOption.data('percent')) || 0;

                var totalProfit = totalInvest * profitPercentage / 100; // Ganancia total del mes
                var today = new Date();
                var daysInMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0).getDate(); // Días en el mes actual
                var currentDay = today.getDate();
                var remainingDays = daysInMonth - currentDay; // Días restantes en el mes

                var dailyProfit = totalProfit / daysInMonth; // Ganancia diaria
                var adjustedProfit = dailyProfit * remainingDays; // Ganancia ajustada para el mes actual

                var formatter = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' });

                var message1 = "Su inversión de " + formatter.format(totalInvest) +
                    " generará un beneficio total de " + formatter.format(totalProfit) +
                    ", con una ganancia diaria de " + formatter.format(dailyProfit) + ".";

                var message2 = "Debido a que hoy es día " + currentDay +
                    ", recibirá " + formatter.format(adjustedProfit) +
                    " en este mes. A partir del próximo mes, recibirá la ganancia completa de " + formatter.format(totalProfit);
                    
                var message3 = "Sus beneficios comenzarán a generarse una vez validado su depósito, para ello copie el ID de la " +
                 " transacción y envié la misma a revision en la sección de Activos"

                $("#step4Message1").text(message1);
                $("#step4Message2").text(message2);
                
                if (deposit > 0)
                    $("#step4Message3").text(message3);

                $("#MonthProfit").val(adjustedProfit.toFixed(2));
            }

            // Inicializar iCheck para los radio buttons del paso 3
            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green'
            });

            // Handler para cambios en los radio buttons usando iCheck
            $('input[name="ReinvestOption"]').on('ifChanged', function (event) {
                var selectedValue = $(this).val();
                var selectedEndType = $(this).data('endtype'); // Obtiene el valor de EndType
                if (selectedValue === 'custom') {
                    $("#customReinvestInput").show();
                    var customVal = $("#customReinvestPercent").val();
                    $("#hiddenReinvestPercent").val(customVal);
                } else {
                    $("#customReinvestInput").hide();
                    $("#hiddenReinvestPercent").val(selectedValue);
                }
                // Actualizar el campo hidden para EndType
                $("#hiddenEndType").val(selectedEndType);
            });

            // Actualizar el campo hidden cuando se ingresa un valor en el input custom
            $("#customReinvestPercent").on('input', function () {
                $("#hiddenReinvestPercent").val($(this).val());
            });

            // Establecer valores por defecto: opción 1: reinvertir 100% y EndType = 1
            $("#hiddenReinvestPercent").val(100);
            $("#hiddenEndType").val(1);
        });
    </script>
}
